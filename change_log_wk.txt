List: 

// Te pasare a ti estos archivos [ "main.js", "preload.js", "renderer.js", "index.html" ];


- ✅ Volume slider control and porcentaje volume
- ✅ Buttons Volume and mute buttons
- ✅ Waveform Seekbar
- ✅ Casilla: Stop after current song
- ✅ Labels: Total Duration / Current Dur / Left Dur 
- ✅ Button for copy filename without extencion for a current song
- ✅ Pitch audio control
- ✅ Select multiple items in playlist
- ✅ Status bar for playback state (playing/pause) in stop case then show name player
- ✅ loading folder in background process for avoid freeze program
- ✅ Equalizer audio
- ✅ Canciones del nodo xmas ordenadas por nombre de archivo y no por rutas, tras haber obtenido todas las canciones de las carpetas xmas
- ✅ incluir tambien archivos mp4 (videos) y poder verlos
- ✅ Move file to folder to invoke context menu
- ✅ Mejorar la playlist y Mostrar una notificacion tooltip en el lado inferior derecho con progressbar para ver las operaciones de indexeado y actualizacion de carpetas y playlist. implemtacion de manejo de errores.
- ✅ Menu contextual de operaciones de archivo y ventanas de dialogo para operaciones de archivos y cambiar el nombre de archivo
- ✅ Move to recicler bin
- ✅ Historial para desahcer operaciones de archivo
- ✅ Global Keyboard shortcuts
- ✅ Corregir bugs de wavesfufer y cacheado de picos en canciones largas.
- ✅ Prohibir canciones que duren más de 60 minutos (requiere dividirlas ahora).
- Dar estilos finales de etudeplayer


------------------------------------------------------------------------------------------------

  - Estirilizado y reorden de la interfaz de etudeplayer
    - icono en escritorio
    - seleccion de modo claro u obscuro manual y deteccion del tema a usar (windows)
    - reposicionamiento de la barra de status y barra de playback con waveseekbar
    - ecualizador como dialogo
    - el árbol de las carpetas sera una activity bar
      - el contenido interno de las carpetas de año seguira siendo una treeview
      - la playlist estara en el resto de la pantalla
    - 
    - ... proximamente más detalles ...
    - ocultar menubar de desarollo de electron

------------------------------------------------------------------------------------------------


✅ Mejoras en la playlist:
  - funcione como un listbox, poder selecionar uno o varios elementos
  - debe poder tener 1 o más columnas
  - habra 2 columnas: "nombre" y "duracion"
  - al darle click a un elemento se seleciona
  - doble click para reproducirlo y seleccionarlo
  - estilo de seleccion de uno o más


✅ Integracion del menu contextual de electron a los elementos de la playlist
  - click derecho para ver un menu conceptual (vacio por ahora, listo para agregar cosas)
  - habra 2 menus para un elemento seleccionado y otro para elementos multiples seleccionados
  - elementos de prueba para comprobar funcionalidad, luego 


✅ Cachear indexeado de carpetas y playlist, y notificacion de proceso de carpetas y playlist.
  - Mostrar una notificacion tooltip en el lado inferior derecho con progressbar como en vscode para ver las operaciones de indexeado y actualizacion de carpetas y playlist, y mostrar tambien errores de la consola
  - Cachear la exploracion de carpetas de años y contenidos a igual que las playlist para no esperar a que todo cargue mientras se van detecando cambios en playlist y carpetas de años mientras se inicia el programa, esa operacion se usara tambien cuando se detecten cambios.


✅ Eventos de la playlist:
  - ✅ al haber movido o haber quitado una cancion se actualiza la playlist
  - ✅ o haber cambios en las carpetas de las canciones tanto agregado como movimientos y eliminacion
  - ✅ aplica tambien para canciones de navidad al vigilar todas las carpetas
  - ✅ tras cambiar nombre entonces la playlist se actualiza 
  - ✅ con el nuevo nombre en cuando apariencia como en el alamcenado de las playlist


✅ Ventana de dialogo para mover archivos:
  - Este es el diseño de la ventana de dialogo:
    - se usara el custom prompt que hice para renombrar, ahora se usara para la creacion de carpetas
    - se vera un cuadro de area donde sera un un treeview de las carpetas de años
      - se escaneara todo la carpeta root que contiene las carpetas de año
      - no habra limites si se incluiran o se excluiran años, todos los años son bienvenidos.
  - habra dos botones (primero sera "./" para ir a carpeta arriba)
  - y el otro boton llamado "/+" para agregar carpeta nueva y saldra un custom prompt para el nombre
  - los botones anteriormente mencionados estaran ubicados en la parte de arriba del recuadro del treeview
  - debajo de la lista treeview estan dos botones
    - mover
    - cancelar
  - primero saldran una lista de las carpetas de año
  - elegir una carpeta de año
  - estaran las carpetas como:
    - XX. music.main
    - XX. music.registry.album.package
    - XX. music.registry.base
    - XX. music.theme
    - XX. music.xmas
  - (donde XX. es la id la cual se obtiene a traves de la carpeta de año como [ year - 2003 = id en dos digitos ] )
  - las carpetas mensionadas solo apareceran en la lista para elegirlas y se pueden entrar en ellas.
  - las siguientes carpetas dodne no pueden crearse nuevas carpetas dentro de ellas son las que terminan con ".main", ".registry.base", ".xmas"
  - las carpetas que terminan en "music.registry.album.package" y "music.theme" tienen subcarpetas por lo que al darles click en ellas se desplaza un listado de sus subcarpetas.
  - no habra mensaje de confirmacion si esta seguro, una vez dado click a mover, empezara a mover los archivos
  - tras la movida de archivos, lo que se movio desaparece de la playlist, se actualizara unicamente la cache y no puede haber más listeners de actualizacion ya que habra glicheos tanto en la playlist y como en la notificacion tooltip


✅ Menu conceptual para un solo elemento:
  - Uno o mas elementos selecionados:
    - ✅ mover a carpeta (dialog futuro)
    - ✅ verificacion antes de mover
    - ✅ mover a carpeta (mecanismo)
    - mover a papelera ("E:/_Exclude/l_reallydeleted") con captcha

  - ✅ cuando esta un solo elemento seleccionado:
    - ✅ play song
    - ✅ renombrar
    - ✅ copiar nombre del archivo
    - ✅ copiar ruta de archivo

  - ✅ cuando hay elementos multiples seleccionados:
    - ✅ copiar nombres de archivo
    - ✅ copiar rutas de archivo

  - ✅  Deshacer ultimo(s) movimientos(s) (tras mover, renombrar o desabilitar archivos)


✅ Quiero implementar lo de mover archivos (experiencia): 
  - lógica para mover los archivos - ventana de diálogo personalizado para elegir las carpetas 
  - configurar tooltip para ver progreso de movida de archivos 
  - manejo de los cambios en la playlist si los archivo seleccionados dejan la carpeta lo cual es obvio que ocurra. 
  - si el archivo a mover se esta reproduciendo entonces detener el playback y se elimina de la playlist
  - encontre un bug en el programa mientras reintentaba integrar el codigo a etudeplayer:
    - cuando movia un archivo a otra carpeta, mientras se movia la playlist se comporta de forma rara porque empiezan a salir las canciones de la carpeta hacia donde las estoy moviendo en la playlist aunque regresan las canciones de la carpeta origen.
    - se glichea mucho la notificacion tooltipo donde se ejecutan funciones de actualizado de cache y varios listeners de actualizado se ejectuan simultaneamente causando glicheo en la tooltip de notificaciones.
    - lo que escribo antes fueron de los varios reintentos de implentacion de codigo que te he pedido antes y fue frustrante ver esos bugs
  - nota: ya vistes lo que ya esta implementado por lo tanto no reinventes la rueda, ok? piensa más tiempo porfa


✅ Funcionalidades en playlist en orden:

  - ✅ Menu contextual
  - ✅ Renombrado (dialogo y funciones)
    - ✅ mecanismo de cambiar el nombre al archivo
    - ✅ un dialog con un input para cambiar el nombre al archivo (botones ok y cancelar)

  - ✅ Copiar nombres y rutas al portapapeles

  - ✅ Mover elementos
    - ✅ dialogo de mover
    - ✅ modificar nombre de carpetas en el dialogo
    - ✅ verificacion antes de mover archivos
    - ✅ mecanica para mover archivos 
      - ✅ mover archivos a carpetas de destino
      - ✅ quitar de la playlist lo que se movio

  - ✅ Mover a papelera ("E:/_Exclude/l_reallydeleted") con captcha
    - ✅ Mover archivos a una papelera
    - ✅ Pedir al usuario con customPrompt una palabra clave
    - ✅ Un boton en el index para abrir la carpeta papelera con el explorador de archivos
  
  - ✅ Una opcion en el context menu de una cancion selecionada para abrir la ubicacion de la cancion en el explorador

  - ✅ Guardar historial de movimientos para poder desahcer
    - ✅ Contar con logica para desahcer operaciones de archivo
    - ✅ movida de archivos, renombres de archivo, movida a la papelera
      - ✅ actualizar playlist y cache como al mover y renombrar archivos
    - ✅ Funcion para desahcer movimientos:
      - ✅ creacion de carpetas
        - se supone que estan vacias para hacer eso
        - si hay archivos el historial se borra
      - ✅ movida de archivos y movida a papelera
        - se supone que el directorio antiguo sigue existiendo
        - si no se crea el directorio en donde existia
      - ✅ cambios de nombres en los archivos
        - se supone que el archivo sigue existiendo
        - de lo contrario el historial se borra
      - ✅ cambios de nombres en las carpetas
        - se supone que la carpeta con su nombre actual existiendo
        - de lo contrario se borra el historial

  - ✅ Global Keyboard shortcuts
    - ✅ Configurable desde un json
    - ✅ todas las teclas ya fueron incluidas
      - ctrl + num1 back 10 seconds playback (*)
      - ctrl + num2 next song
      - ctrl + num3 ahead 10 seconds playback (*)
      - ctrl + num4 previous
      - ctrl + num5 play/pause
      - ctrl + num6 Activate/minimize window etudeplayer (*)
      - ctrl + num7 volume down
      - ctrl + num8 play random song in playlist (*)
      - ctrl + num9 volume up
      - ctrl + num0 Stop Song
    - ✅ verificar (*) funciones no implementada en renderer.js o en main.js
    - ✅ mensaje de aviso si interfiere un programa como el jubilado foobar2000


  - ✅ Resolver correcion de rendimiento al reproducir canciones largas
    - Encotrado:
      - en wavesufer.js cuando abro un archivo largo se reproduce sin problemas pero no hay onda y tarda en cargar la onda y empieza a lagearse la pagina y cuando ya se cargo después de varias trabadas ya queda la onda pero los efectos del ecualizador se pierden, vuelvo a abrir el archivo y de nuevo. edit: ya se porque despues de unos milisegundos se aplican los efectos del ecualizador y se debe a que aun no se ha cargado la onda y una vez cargada se aplican, eso solo lo he visto en archivos que duran poco tiempo como 3 o 5 minutos.
      - ya se porque despues de unos milisegundos se aplican los efectos del ecualizador y se debe a que aun no se ha cargado la onda y una vez cargada se aplican, eso solo lo he visto en archivos que duran poco tiempo como 3 o 5 minutos. eso se le conoce como glope limpio al aplicar los efectos del ecualizador unos milisegundo despues.
      - edit: tras pasar por dificultades me doy cuenta que si si aun no esta cargada la onda de picos, los efectos no se aplican. pero esto ya se ve solucionado porque esta en promise la funcion del init del wavesfuer y eso soluciono el problema, nada más que cuando esta trabajando con generar la onda en archivos pesados, la interfaz del html se congela y eso afecta el rendimiento. en resumen no tengo ya el problema de los efectos por ahora.
      - algo que aprendi es que los picos no se hace con wavesufer.load() si no es a traves de WaveSurfer.create({ peaks: _myPeaks }).
      - wavesufer usa la version 
    - Mecanismo pensado para corregir el problema (archivos duran más de 20 min):
      - por medio de la funcion playSong(index) despues de obtener la ruta se comprobara si la cancion dura más tiempo y en ese caso se hara lo siguiente.
        - la ruta de la cancion se envia al main.js usando `FFmpeg-Peaks` para obtener la onda de picos y la regresara al renderer para almacenarla al IndexedDB y darle los picos a wavesufer.
          - el progreso de la tarea se podra ver desde la consola.
        - en caso de ser la segunda vez de abrir la cancion se obtendran los picos de IndexedDB para acelerar la apertura de la cancion y darle los picos al init de wavesufer.
        - dar los picos a wavesufer con las canciones que duran 20 min y debe de ser antes de iniciar la reproduccion porque wavesfuer no soporta la carga de picos progresiva.
        - si el usuario quiere abrir otra cancion pero corta y se esta trajando en los picos, dejamos que termine y guarde los picos en IndexedDB. en caso de querer abrir otra cancion pero que dura más de 20 minutos, podemos detener el proceso de los picos y trabajamos en esa cancion entonces.
        - en caso de que algo falle, wavesufer no puede generar picos en canciones de más de 20 min, lo que se hara es enviar dependiendo de la duracion una onda de picos de una linea pequeña que parece silencio de pista y se hace esto para al menos poder ver el cursor de la posicion de la cancion y mostrar un placeholder en el waveform diciendo que no se obtuvo la onda de picos.
    - control de la cache de los picos en IndexedDB:
      - la cache guarda estos metadatos: {ruta, tamaño, duracion} y los picos
      - si cambia uno de estos metadatos {ruta, tamaño, duracion} se invalida y se vuelven a generar.
      - habra una verificacion si las rutas de las canciones todavia existen, si no se borraran los archivos que se han elimiado o desaparecido.
      - si se mueve un archivo a otra carpeta, se ve a la papelera o se renombra el archivo o se renombra la carpeta elegida para la playlist. se buscaran las rutas de antes y se actualizaran en el almacenado el metadado de ruta.
      - al inicio de la app se comprobara si los archivos si existen todavia, de lo contraio se eliminaran del registro de cache en IndexedDB.
      - al cerrar la app o por cada movimiento o consulta de picos se guarda todo lo relacionado con la en IndexedDB.
    - observacion: se ha resuelto al parecer pero al momento de darle los picos a wavesufer empieza a realentizarse la ui y un poco el pc mientras adquiere los picos precalculados aunque eso es un rato. ya despues todo fluye bien. cacheado o no. aunque mientras se genera como que la ui se conngela un momento. se tendria que ver esto pero lo más pesado se ha resuelto. mientras tanto se revisara el rendimiento de electron, para luego esterilizar la interfaz.


------------------------------------------------------------------------------------------------


Extention Feature (Ending jobs)
- ❌ drag element in the playlist (canceled)
- Remember playlist, volume state, window state
- Global Keyboard shortcuts
- set css styles in the UI.css (finally)


comming soon:
- Divide tu app en módulos: AudioManager, UIManager, FileManager, etc.
- propeties file for view tags and thecnical info
- file searcher
- barra de menus
- custom titlebar

Other Tools to unify EtudePlayer convert to Etude Studio:
- HandImageENJS
- Music Searcher (for player)
- parafy_analityc.py
- juego de ruido de colores en electron.js (herramienta separada)


------------------------------------------------------------------------

